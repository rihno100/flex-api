/* Scss Document */
/// '///'은 sass에서만 보이는 주석 
$flexbasis : 150px;
$itemHeight : 400px;
@mixin borderRadius{
	margin:10px;
	border-radius:10px;
	}
@mixin defaultstyle{
	padding:0;
	margin:0;
	list-style:none;
	}
@mixin itemColor{
			div{
			flex-grow:1;
			color:#fff;
			text-align:center;
			height:50px;
			display:flex;
			align-items:center;
				&:nth-child(1){
				background:#CD1E21;
				}
				&:nth-child(2){
				background:#871ECD;
				}
				&:nth-child(3){
				background:#1E94CD;
				}
				&:nth-child(4){
				background:#1ECD3A;
				}
				&:nth-child(5){
				background:#CDC71E;
				}
				&:nth-child(6){
				background:#CD7F1E;
				}
				p{width:100%;
					text-algn:center;
					border:0;
				}
			}
			div.shrinkitem{
				flex-grow:0;
				flex-shrink:1;
				flex-basis:600px;
				}
	}
@mixin flexDirection{
		&.row{
				flex-direction:row;
				}
		&.row-reverse{
				flex-direction:row-reverse;
				}
		&.column{
				flex-direction:column;
				}
		&.column-reverse{
				flex-direction:column-reverse;
				}
		&.column-reverse{
				flex-direction:column-reverse;
				}
	}
@mixin flexWrap{
		&.nowrap{
				flex-wrap:nowrap;
				}
		&.wrap{
				flex-wrap:wrap;
				& >div{flex-basis:$flexbasis;}
				}
		&.wrap-reverse{
				flex-wrap:wrap-reverse;
				& >div{flex-basis:$flexbasis;}
				}
	}
@mixin justifyContent{
		div{flex:0 0 20px;}
		&.flex-start{
				justify-content:flex-start;
				}
		&.flex-end{
				justify-content:flex-end;
				}
		&.center{
				justify-content:center;
				}
		&.space-between{
				justify-content:space-between;
				}
		&.space-around{
				justify-content:space-around;
				}
		&.space-evenly{
				justify-content:space-evenly;
				}
	}
@mixin alignItems{
		height:$itemHeight;
		& >div{
		height:auto;
		}
		&.flex-start{
				align-items:flex-start;
				}
		&.flex-end{
				align-items:flex-end;
				}
		&.center{
				align-items:center;
				}
		&.baseline{
				align-items:baseline;
				}
		&.stretch{
				align-items:stretch;
				}
	}
@mixin alignContent{
	height:$itemHeight;
	flex-wrap:wrap;
	& >div{
		flex:1 0 300px;
		height:auto;
		}
	&.flex-start{
		align-content: flex-start;
		}
	&.flex-end{
		align-content: flex-end;
		}
	&.center{
		align-content: center;
		}
	&.stretch{
		align-content: stretch;
		}
	&.space-between{
		align-content: space-between;
		}
	&.space-around{
		align-content: space-around;
		}
	}
	
@mixin alignSelf{
		height:$itemHeight;
		div{
		height:auto;
		&.flex-start{
				align-self:flex-start;
				}
		&.flex-end{
				align-self:flex-end;
				}
		&.center{
				align-self:center;
				}
		&.baseline{
				align-self:baseline;
				}
		&.stretch{
				align-self:stretch;
				}
		}
	}

	
html,body{
	@include defaultstyle;
	background:#B1CCDD;
	height:100%;
	}
h2,p{margin:0; padding:0;}
a{text-decoration:none;}
header{
	display:flex;
	flex-wrap:wrap;
	width:100%;
	section{
		@include borderRadius;
		transition:0.3s ease;
		&{flex: 1 0 530px;}	
		justify-content:center;	
		background:#176FAF;
		padding:100px 0;
		max-height: 500px;
		display:flex;
		align-content:center;
		text-align:center;
		.hinner{
			display:flex;
			flex-direction:column;
			align-content:center;
			nav{
			@include borderRadius;
			background:#fff;
			padding:0px 0;
			display:flex;
			justify-content:space-evenly;
			align-content:center;
			overflow:hidden;
			a {
				position:relative;
				padding:2.5px 0 0;
				margin:0;
				font-size:1.5em;
				line-height:1.5em;
				color:#176FAF;
				vertical-align:middle;
				width:100%;
				transition:0.3s ease;
				&:hover{position:relative; color:#F98B00; transition:0.3s ease;}
				&:before{content:''; position:absolute; width:calc(100% - 40px); height:5px; background:#F98B00; border-radius:100px; left:20px; bottom:-5px; margin:0 0 0 -2.5px; transition:0.3s ease;}
				&:hover:before{ bottom:0px; transition:0.3s ease;}
				&:after{
					content:''; position:absolute; right:-1px; height:calc(100% - 20px); top:10px; width:2px; background:#176FAF;
					transform:rotate(35deg);
					border-radius:100px;
					}
				&:last-child:after{
					display:none;
					}
				}
			}
		}
		h2{font-size:3em; line-height:auto; color:#fff;}
		p{font-size:1em; line-height:auto; color:#002958;}
		}
	}
.font30{font-size:30px;}
.font50{font-size:50px;}
pre{
	background:#373737; color:#D1C14B; padding:0 0; margin:0;
	white-space:pre-line;
	div.codecontent {display:block; padding:15px 0; }
	p{
		width:calc(100% - 30px);
		overflow:hidden;
		margin:0;
		padding:5px 15px;
		///&:nth-of-type(2){padding:0 0 0 30px;}
		span{
			color:#D14B4B;
			}
		}
	h2{
		display:block; margin:0; padding:0 0 0 5px; background:#323232;
		text-transform:uppercase;
		line-height:2em;
		font-size: 1.5em;
		-webkit-margin-before: 0em;
		-webkit-margin-after: 0em;
		-webkit-margin-start: 0px;
		-webkit-margin-end: 0px;
		font-weight: bold;
		}
	code{
		color:#4B98D1;
		text-align:left;
		padding:0 0 0;
		margin:0;
	 	}
	}
.container{
	display:flex;
	flex-wrap:wrap;
	width:100%;
	div.flexarea{
			@include borderRadius;
			///wrap을 사용하며 특정크기에서 반응형으로 줄어들게 할경우 flex-shrink:0; 으로 설정 basis 값 미만을 떨어지면 줄바꿈된고 아이템 크기가 basis 값보다 
			/// 커지며 동시에 flex-grow 값을 영향으로 받아서 줄어든다.
			///item의 크기가  flex-grow는 flex-basis 초과일 경우 적용되고 flex-shrink미만일 경우 적용된다.
			///flex-shrink의 경우 item 내부의 요소의 크기까지만 줄어들고 더 이상 줄어들 공간이 없을 경우 그 다음 순위의 shrink 값을 갖고 있는 아템 순으로 줄어든다.
			///&:nth-child(1){flex: 1 12 400px;}
		    ///&:nth-child(2){flex: 6 6 400px;}
			///&:nth-child(3){flex: 12 1 400px;}
			transition:0.3s ease;
			&{flex: 1 0 500px;}
			background:#fff;
			border:1px solid #333;
			display:flex;
			flex-direction:column;
			padding:15px;
			.items{
				& > p{
					color:#525252;
					font-size:13px;
					line-height:23px;
					margin:0 0 20px;
					padding:0 0 20px;
					border-bottom:dashed 1px #888888;
					span{
						font-weight:700;
						color:#222222
						}
					}
				}
			.items:nth-child(2){background:#F3F676;}
			.inputarea{
				display:flex;
				flex-direction:row;
				.innerinput{
					margin:0 0 0 5px;
					p{
						display:inline-block;
						font-size:12.5px;
						letter-spacing:-0.5px;
					}
					}
				}
			.inputtextarea{
				display:flex;
				flex-wrap:wrap;
				.innerinput{
					display:flex;
					flex: 1 0 10px;
					margin:0 0 0 5px;
					input{
						flex:1 0 5px;
						margin:10px 0;
						}
					p{
						flex:0 0 5px;
						display:inline-block;
						font-size:12.5px;
						letter-spacing:-0.5px;
						line-height:3.2em;
						
					}
					}
				}
	
			.inner{
			display:flex;
			@include itemColor;
			}
			&.flexdirection .inner{
				@include flexDirection;
				}
			&.flexwrap .inner{
				@include flexWrap;
				}
			&.justifycontent .inner{
				@include justifyContent;
				}
			&.alignitems .inner{
				@include alignItems;
				}
			&.aligncontent .inner{
				@include alignContent;
				}	
			&.alignself .inner{
				@include alignSelf;
				}	
		}
	}
 